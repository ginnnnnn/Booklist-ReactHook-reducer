{"version":3,"sources":["contexts/BookContext.js","components/Nabar.js","components/BookDetail.js","components/BookList.js","components/BookForm.js","App.js","serviceWorker.js","index.js"],"names":["BookContext","createContext","BookContextProvider","props","_useState","useState","title","author","id","_useState2","Object","slicedToArray","books","setBooks","react_default","a","createElement","Provider","value","addBook","concat","toConsumableArray","uuid","removeBook","filter","book","children","Navbar","useContext","className","length","BookDetail","_ref","onClick","BookList","map","components_BookDetail","key","BookForm","setTitle","_useState3","_useState4","setAuthor","onSubmit","e","preventDefault","type","placeholder","required","onChange","target","App","contexts_BookContext","Nabar","components_BookList","components_BookForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.86b2765d.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\nimport uuid from 'uuid/v1';\n\nexport const BookContext = createContext();\n\nconst BookContextProvider = (props) => {\n    const [books, setBooks] = useState([\n        { title: 'One piece', author: 'Oda Eiichiro', id: '1' },\n        { title: 'Naruto', author: ' Masashi Kishimoto', id: '2' },\n        { title: 'One Punch-Man', author: 'Makoto Furukawa', id: '3' },\n    ]);\n\n    const addBook = (title, author) => {\n        setBooks([...books, { title: title, author: author, id: uuid() }])\n    }\n\n    const removeBook = (id) => {\n        setBooks(books.filter(book => {\n            return book.id !== id\n        }))\n    }\n    return (\n        <BookContext.Provider value={{ books, addBook, removeBook }}>\n            {props.children}\n        </BookContext.Provider>\n    );\n}\n\nexport default BookContextProvider;","import React, { useContext } from 'react';\nimport { BookContext } from '../contexts/BookContext';\nconst Navbar = () => {\n    const { books } = useContext(BookContext);\n    return (\n        <div className='navbar'>\n            <h1>Best Monga List</h1>\n            <p>Currently you have {books.length} sets of Monga</p>\n        </div>);\n}\n\nexport default Navbar;","import React, { useContext } from 'react';\nimport { BookContext } from '../contexts/BookContext';\nconst BookDetail = ({ book }) => {\n    const { removeBook } = useContext(BookContext)\n    return (\n        <li onClick={() => removeBook(book.id)}>\n            <div className='title'>{book.title}</div>\n            <div className='author'>{book.author}</div>\n        </li>\n    );\n}\n\nexport default BookDetail;","import React, { useContext } from 'react';\nimport { BookContext } from '../contexts/BookContext';\nimport BookDetail from './BookDetail';\n\n\nconst BookList = () => {\n    const { books } = useContext(BookContext)\n    return books.length ? (<div className='book-list'>\n        <ul>\n            {books.map(book => {\n                return <BookDetail book={book} key={book.id} />\n            })}\n        </ul>\n    </div>) : (\n            <div className='empty'>no books to read. keep updating</div>\n        )\n}\n\nexport default BookList;","import React, { useContext, useState } from 'react';\nimport { BookContext } from '../contexts/BookContext';\n\nconst BookForm = () => {\n    const [title, setTitle] = useState(\"\")\n    const [author, setAuthor] = useState(\"\")\n\n    const { addBook } = useContext(BookContext);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        addBook(title, author);\n        setTitle(\"\");\n        setAuthor(\"\");\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type='text'\n                placeholder=\"Book Title\"\n                value={title} required onChange={e => setTitle(e.target.value)} />\n            <input type='text'\n                placeholder=\"Author\"\n                value={author} required onChange={e => setAuthor(e.target.value)} />\n            <input type='submit' value=\"add a book\" />\n        </form>\n    );\n}\n\nexport default BookForm;","import React from 'react';\nimport BookContextProvider from './contexts/BookContext';\nimport Navbar from './components/Nabar';\nimport BookList from './components/BookList';\nimport BookForm from './components/BookForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BookContextProvider>\n        <Navbar />\n        <BookList />\n        <BookForm />\n      </BookContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}